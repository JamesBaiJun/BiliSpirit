<UserControl x:Class="BiliSpirit.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BiliSpirit.Views"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:vm="clr-namespace:BiliSpirit.ViewModels"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             xmlns:view="clr-namespace:BiliSpirit.Views"
             d:DesignHeight="450" Loaded="{DXEvent Handler='Loaded()'}" 
             d:DesignWidth="800" DataContext="{dxmvvm:ViewModelSource Type=vm:MainViewModel}">
    <Grid ShowGridLines="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Image x:Name="topimage" Margin="-1 0" Source="{Binding TopImage,Converter={StaticResource imageConverter600Zip}}" RenderOptions.BitmapScalingMode="Fant" VerticalAlignment="Top">
        </Image>
        <Border Height="90" Margin="8 4" Background="#E1FFFFFF" CornerRadius="8" Effect="{StaticResource BorderShadow}" VerticalAlignment="Bottom"/>

        <Grid Margin="12 28 12 4" ShowGridLines="False">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition />
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Image Source="{Binding LoginUser.data.face}" Width="80" Height="80" RenderOptions.BitmapScalingMode="Fant" HorizontalAlignment="Center" Stretch="Fill">
                    <Image.Clip>
                        <EllipseGeometry Center="40,40" RadiusX="38" RadiusY="38"/>
                    </Image.Clip>
                </Image>

                <Ellipse Fill="{StaticResource PrimaryBlueColor}" StrokeThickness="2" Stroke="White" Margin="2 2 12 2" Width="16" Height="16" HorizontalAlignment="Right" VerticalAlignment="Bottom"></Ellipse>
                <TextBlock Text="{Binding LoginUser.data.level}" Margin="0 0 10 2" FontSize="10" 
                           HorizontalAlignment="Right" Foreground="{StaticResource PrimaryGrayColor}" Width="13" Height="16" VerticalAlignment="Bottom"/>
            </Grid>
            
            <StackPanel Grid.Column="1" Margin="4" 
                        Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                <TextBlock Text="{Binding LoginUser.data.name}" FontSize="16" Foreground="{StaticResource PrimaryPinkColor}"/>


                <Border Background="{StaticResource PrimaryPinkColor}" CornerRadius="4"
                            Padding="4 2 4 4" Margin="4" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding LoginUser.data.vip.label.text}" FontSize="10" 
                            Foreground="White"/>
                </Border>

            </StackPanel>

            <UniformGrid Grid.Column="2" Rows="2" Columns="3" Margin="0 0 4 16">
                <TextBlock Text="关注" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                <TextBlock Text="粉丝" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                <TextBlock Text="动态" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding UserStatData.following}" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 4"/>
                <TextBlock Text="{Binding UserStatData.follower}" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 4"/>
                <TextBlock Text="{Binding UserStatData.dynamic_count}" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0 4"/>
            </UniformGrid>

            <Border Margin="4 0 4 -8" Visibility="{DXBinding 'UnReadCount!=0',Converter={dxmvvm:BooleanToVisibilityConverter}}" Background="{StaticResource PrimaryBlueColor}" CornerRadius="4" Padding="6 2" Height="20"
                    Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <TextBlock Text="{Binding UnReadCount}" Foreground="White" HorizontalAlignment="Center" FontSize="10"/>
            </Border>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Line VerticalAlignment="Bottom" Margin="0 0 0 4" X1="0" Y1="0" X2="1" Y2="0" StrokeThickness="1" Stretch="Fill" Stroke="{StaticResource PrimaryPinkColor}" />
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                <StackPanel.Resources>
                    <Style TargetType="RadioButton">
                        <Setter Property="Foreground" Value="{StaticResource PrimaryPinkColor}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="RadioButton">
                                    <Grid Background="Transparent">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition Height="2"/>
                                        </Grid.RowDefinitions>
                                        <ContentPresenter Margin="16 0 16 0"/>
                                        <Rectangle x:Name="check" Stretch="Fill" RenderTransformOrigin="0.5,0.5" Margin="0 0 0 0" Grid.Row="1" Fill="{StaticResource PrimaryPinkColor}">
                                            <Rectangle.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                </TransformGroup>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="Visibility" TargetName="check" Value="Visible"/>
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.15" From="0" To="1" Storyboard.TargetName="check" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                        </Trigger>

                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="Visibility" TargetName="check" Value="Collapsed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </StackPanel.Resources>
                <RadioButton x:Name="recomRad" IsChecked="True">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Film"  Width="12"/>
                        <TextBlock Text="推荐" Margin="4 0 0 0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton x:Name="dynaRad" IsChecked="True">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Fan"  Width="12"/>
                        <TextBlock Text="动态" Margin="4 0 0 0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton x:Name="hotRad" IsChecked="True">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Fire"  Width="12"/>
                        <TextBlock Text="热门" Margin="4 0 0 0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton x:Name="liveRad">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Camera" Width="12"/>
                        <TextBlock Text="直播" Margin="4 0 0 0"/>
                    </StackPanel>
                </RadioButton>
                <RadioButton x:Name="hisRad">
                    <StackPanel Orientation="Horizontal">
                        <icon:PackIconMaterial Kind="Timer" Width="12"/>
                        <TextBlock Text="历史" Margin="4 0 0 0"/>
                    </StackPanel>
                </RadioButton>

            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Horizontal" Margin="4" HorizontalAlignment="Right" Height="22">
                <!--<Button Command="{Binding RefreshDataCommand}" Style="{StaticResource IconButton}" ToolTip="刷新数据">
                    <icon:PackIconMaterial Kind="RefreshCircle" Width="16" Height="16"/>
                </Button>-->
            </StackPanel>

            <ScrollViewer Grid.Row="1" CanContentScroll="False" Margin="0 0 0 8" Style="{StaticResource for_scrollviewer}">
                <Grid>
                    <ItemsControl Visibility="{Binding ElementName=hotRad, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}" 
                              Margin="4" ItemsSource="{Binding HotVideoList}" ItemTemplate="{StaticResource VideoTemplate}"/>

                    <ItemsControl Visibility="{Binding ElementName=liveRad, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}" 
                              Margin="4" ItemsSource="{Binding LiveList}" ItemTemplate="{StaticResource LiveTemplate}"/>

                    <ItemsControl Visibility="{Binding ElementName=hisRad, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}" 
                              Margin="4" ItemsSource="{Binding HistoryList}" ItemTemplate="{StaticResource HistoryTemplate}"/>

                    <view:DynamicView Visibility="{Binding ElementName=dynaRad, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}" />

                    <view:RecommendView Visibility="{Binding ElementName=recomRad, Path=IsChecked, Converter={dxmvvm:BooleanToVisibilityConverter}}" />
                </Grid>
            </ScrollViewer>

            <Grid Grid.RowSpan="3" HorizontalAlignment="Right" Margin="8">
                <icon:PackIconMaterial Kind="RefreshCircle" Foreground="{StaticResource PrimaryPinkColor}" 
                                        RenderTransformOrigin="0.5,0.5"  Width="14" Height="14">
                    <icon:PackIconMaterial.RenderTransform>
                        <TransformGroup>
                            <RotateTransform x:Name="totate" Angle="45"/>
                        </TransformGroup>
                    </icon:PackIconMaterial.RenderTransform>
                    <icon:PackIconMaterial.Style>
                        <Style TargetType="icon:PackIconMaterial">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsRefreshing}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0" To="360" Duration="0:0:1"  RepeatBehavior="3x"
                                                                 Storyboard.TargetProperty="RenderTransform.Children[0].Angle"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </icon:PackIconMaterial.Style>
                </icon:PackIconMaterial>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
